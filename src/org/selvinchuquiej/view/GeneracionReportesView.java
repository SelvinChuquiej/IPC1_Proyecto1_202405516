/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.selvinchuquiej.view;

import java.io.FileNotFoundException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.selvinchuquiej.controller.BitacoraController;
import org.selvinchuquiej.controller.GeneracionReporteController;
import org.selvinchuquiej.model.Transaccion;
import org.selvinchuquiej.pdf.DepositosPDF;
import org.selvinchuquiej.pdf.HistorialTransaccionesPDF;
import org.selvinchuquiej.pdf.RetirosPDF;
import org.selvinchuquiej.system.Principal;
import org.selvinchuquiej.system.Ventana;

/**
 *
 * @author Selvi
 */
public class GeneracionReportesView extends javax.swing.JFrame implements Ventana {

    /**
     * Creates new form GeneracionReportesView
     */
    private Principal principal;
    private GeneracionReporteController generacionReporteController;
    private BitacoraController bitacoraController;
    private HistorialTransaccionesPDF historialTransaccionesPDF;
    private DepositosPDF depositosPDF;
    private RetirosPDF retirosPDF;

    public GeneracionReportesView() {
    }

    public GeneracionReportesView(Principal principal, GeneracionReporteController generacionReporteController, BitacoraController bitacoraController) {
        this.principal = principal;
        this.generacionReporteController = generacionReporteController;
        this.bitacoraController = bitacoraController;
        this.historialTransaccionesPDF = new HistorialTransaccionesPDF();
        this.depositosPDF = new DepositosPDF();
        this.retirosPDF = new RetirosPDF();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGenTransacciones = new javax.swing.JButton();
        btnGenDepositos = new javax.swing.JButton();
        btnGenRetiros = new javax.swing.JButton();
        btnRegresarGR = new javax.swing.JButton();
        txtCUI = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnGenTransacciones.setText("Historial Transacciones");
        btnGenTransacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenTransaccionesActionPerformed(evt);
            }
        });

        btnGenDepositos.setText("Depositos Realizados");
        btnGenDepositos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenDepositosActionPerformed(evt);
            }
        });

        btnGenRetiros.setText("Retiros Realizados");
        btnGenRetiros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenRetirosActionPerformed(evt);
            }
        });

        btnRegresarGR.setText("Regresar");
        btnRegresarGR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarGRActionPerformed(evt);
            }
        });

        jLabel1.setText("CUI:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGenTransacciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGenDepositos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGenRetiros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(99, 99, 99))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnRegresarGR))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCUI, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(btnRegresarGR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtCUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGenTransacciones)
                .addGap(18, 18, 18)
                .addComponent(btnGenDepositos)
                .addGap(18, 18, 18)
                .addComponent(btnGenRetiros)
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarGRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarGRActionPerformed
        // TODO add your handling code here:
        principal.mostrarPrincipalView();
        this.ocultar();
        txtCUI.setText("");
    }//GEN-LAST:event_btnRegresarGRActionPerformed

    private void btnGenTransaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenTransaccionesActionPerformed
        // TODO add your handling code here:
        String accion = "Generar Reporte";

        if (!txtCUI.getText().isEmpty()) {
            String idC = txtCUI.getText().trim();
            List<Transaccion> transacciones = generacionReporteController.obtenerTransacciones(idC);

            if (transacciones.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No se encontraron transacciones para el CUI proporcionado.");
                return;
            }
            try {
                historialTransaccionesPDF.generarPDF(idC, transacciones);
                JOptionPane.showMessageDialog(null, "PDF Creado correctamente");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GeneracionReportesView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Porfavor ingresa un CUI valido");
            bitacoraController.registrarEvento(accion, bitacoraController.error, "No se ingreso ningun CUI para generar reporte");
        }
    }//GEN-LAST:event_btnGenTransaccionesActionPerformed

    private void btnGenDepositosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenDepositosActionPerformed
        String accion = "Generar Reporte";
        // TODO add your handling code here:
        if (!txtCUI.getText().isEmpty()) {
            String idC = txtCUI.getText();
            List<Transaccion> depositos = generacionReporteController.obtenerDepositos(idC);
            try {
                depositosPDF.generarPDF(idC, depositos);
                JOptionPane.showMessageDialog(null, "PDF Creado correctamente");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GeneracionReportesView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Porfavor ingresa un CUI valido");
            bitacoraController.registrarEvento(accion, bitacoraController.error, "No se ingreso ningun CUI para generar reporte");
        }
    }//GEN-LAST:event_btnGenDepositosActionPerformed

    private void btnGenRetirosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenRetirosActionPerformed
        String accion = "Generar Reporte";
        // TODO add your handling code here:
        if (!txtCUI.getText().isEmpty()) {
            String idC = txtCUI.getText();
            List<Transaccion> retiros = generacionReporteController.obtenerRetiros(idC);
            try {
                retirosPDF.generarPDF(idC, retiros);
                JOptionPane.showMessageDialog(null, "PDF Creado correctamente");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GeneracionReportesView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Porfavor ingresa un CUI valido");
            bitacoraController.registrarEvento(accion, bitacoraController.error, "No se ingreso ningun CUI para generar reporte");
        }
    }//GEN-LAST:event_btnGenRetirosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneracionReportesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneracionReportesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneracionReportesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneracionReportesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneracionReportesView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenDepositos;
    private javax.swing.JButton btnGenRetiros;
    private javax.swing.JButton btnGenTransacciones;
    private javax.swing.JButton btnRegresarGR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtCUI;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mostrar() {
        setVisible(true);
    }

    @Override
    public void ocultar() {
        setVisible(false);
    }
}
